{"version":3,"sources":["myBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","target","name","value","onSubmit","e","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","update","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","nweetAttachment","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","nweetArr","docs","map","marginTop","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","signOut","push","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b84ba91d.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\r\nimport { authService } from 'myBase';\r\n\r\nconst AuthForm = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const onChange = ({ target: { name, value } }) => {\r\n    if (name === 'email') {\r\n      setEmail(value);\r\n    } else if (name === 'password') {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async(e) => {\r\n    e.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        // create account\r\n        data = await authService.createUserWithEmailAndPassword(email, password);\r\n      } else {\r\n        // log in\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch(error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"container\">\r\n        <input \r\n          name='email' \r\n          type='email' \r\n          placeholder='Email' \r\n          required \r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input\r\n          name='password' \r\n          type='password' \r\n          placeholder='Password' \r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"authInput\"\r\n        />\r\n        <input \r\n          type='submit' \r\n          value={newAccount ? \"Create Account\" : \"Log In\"}\r\n          className=\"authInput authSubmit\"\r\n        />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n      </form>\r\n      <span onClick={toggleAccount} className=\"authSwitch\">\r\n        {newAccount ? \"Sign in.\" : \"Create Account\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'myBase';\r\n\r\n\r\n\r\nconst Auth = () => {\r\n\r\nconst onSocialClick = async (e) => {\r\n  const { \r\n    target: { name }, \r\n  } = e;\r\n  let provider;\r\n  if (name === 'google') {\r\n    provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n  } else if (name===\"Github\") {\r\n    provider = new firebaseInstance.auth.GithubAuthProvider();\r\n  }\r\n  await authService.signInWithPopup(provider)\r\n};\r\n  return (\r\n    <div className=\"authContainer\">\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"3x\"\r\n        style={{ marginBottom: 30}}\r\n      />\r\n      <AuthForm />\r\n      <div className=\"authBtns\">\r\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n          Continue with Google\r\n          <FontAwesomeIcon icon={faGoogle} />\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n          Continue with Github \r\n          <FontAwesomeIcon icon={faGithub} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;","import { dbService, storageService } from 'myBase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      if (nweetObj.attachmentUrl !== \"\") {\r\n        await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n      }\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    })\r\n    setEditing(false);\r\n  };\r\n  const onChange = (e) => {\r\n    const { \r\n      target: { value },\r\n    } = e;\r\n    setNewNweet(value);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>          \r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input \r\n                  onChange={onChange}\r\n                  type='text' \r\n                  placeholder='Edit your nweet' \r\n                  value={newNweet} \r\n                  required\r\n                  autoFocus\r\n                  className=\"formInput\"\r\n                />\r\n                <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\"/>\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}    \r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nweet;","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { dbService, storageService } from 'myBase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (e) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    e.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    };\r\n\r\n    const nweetAttachment = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n\r\n    await dbService.collection(\"nweets\").add(nweetAttachment);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const { \r\n      target: { value }, \r\n    } = e;\r\n    setNweet(value);\r\n  };\r\n  \r\n  const onFileChange = (e) => {\r\n    const { \r\n      target: { files } ,\r\n    } = e;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const { \r\n        currentTarget : { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    }\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        style={{\r\n          opacity: 0,\r\n        }}\r\n      />\r\n      {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;","import Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\nimport { dbService } from 'myBase';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\")\r\n      .orderBy(\"createdAt\",\"desc\")\r\n      .onSnapshot((snapshot) => {\r\n      const nweetArr = snapshot.docs.map((doc) => ({\r\n        id:doc.id,\r\n        ...doc.data(),\r\n      }));\r\n      setNweets(nweetArr);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet \r\n            key={nweet.id} \r\n            nweetObj={nweet} \r\n            isOwner={nweet.creatorId === userObj.uid} \r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => <nav>\r\n  <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n    <li>\r\n      <Link to=\"/\" style={{ marginRight: 10 }}>\r\n        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n      </Link>\r\n    </li>\r\n    <li>\r\n      <Link\r\n          to=\"/profile\"\r\n          style={{\r\n            marginLeft: 10,\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            fontSize: 12,\r\n          }}\r\n        >\r\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n          <span style={{ marginTop: 10 }}>\r\n            {userObj.displayName\r\n              ? `${userObj.displayName}의 Profile`\r\n              : \"Profile\"}\r\n          </span>\r\n        </Link>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n\r\nexport default Navigation;","import { authService } from 'myBase';\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    authService.signOut();\r\n    history.push('/');\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n  <div className=\"container\">\r\n    <form onSubmit={onSubmit} className=\"profileForm\">\r\n      <input \r\n        onChange={onChange} \r\n        type='text' \r\n        placeholder=\"Display name\"\r\n        value={newDisplayName}\r\n        autoFocus\r\n        className=\"formInput\"\r\n      />\r\n      <input \r\n        type='submit' \r\n        value='Update Profile'\r\n        className=\"formBtn\"\r\n        style={{\r\n          marginTop: 10,\r\n        }}\r\n      />\r\n    </form>\r\n    <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n      Log Out\r\n    </span>\r\n  </div>);\r\n};","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile refreshUser={refreshUser} userObj={userObj} />\r\n            </Route>      \r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )};\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"myBase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] =useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),         \n        });\n      } else {\n        setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),         \n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter \n          refreshUser={refreshUser} \n          isLoggedIn={Boolean(userObj)} \n          userObj={userObj} \n        /> \n      ) : ( \n        \"Inintializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}